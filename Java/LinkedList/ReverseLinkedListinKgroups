/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class ReverseLinkedListinKgroups {
    public ListNode reverseKGroup(ListNode head, int k) 
    {
        if(head==null || head.next==null)
        {
            return head;
        }
        
        int length = lengthoflist(head);
        
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        
        ListNode pre = dummy;
        ListNode cur;
        ListNode nex;
        
        while(length>=k)
        {
            cur = pre.next;
            nex = cur.next;
            
            for(int i=1;i<k;i++)
            {
                cur.next = nex.next;
                nex.next = pre.next;
                pre.next = nex;
                nex = cur.next;
            }
            pre = cur;
            length-=k;
        }
        
        return dummy.next;
        
        
    }
    public int lengthoflist(ListNode head)
    {
        int count = 0;
        while(head!=null)
        {
            ++count;
            head=head.next;
        }
        
        return count;
    }
    
    
}